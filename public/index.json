[{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech ![Alt text for your image](\r)\nDillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech ![Alt text for your image](static/img/ChatGPT Image Jun 15, 2025, 10_25_39 AM.png)\nDillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"},{"content":"Dillinger The Last Markdown Editor, Ever ] Dillinger is a cloud-enabled, mobile-ready, offline-storage compatible, AngularJS-powered HTML5 Markdown editor.\nType some Markdown on the left See HTML in the right ✨Magic ✨ Features Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) Import and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site\nThe overriding design goal for Markdown\u0026rsquo;s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it\u0026rsquo;s been marked up with tags or formatting instructions.\nThis text you see here is *actually- written in Markdown! To get a feel for Markdown\u0026rsquo;s syntax, type some text into the left window and watch the results in the right.\nTech Dillinger uses a number of open source projects to work properly:\nAngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub.\nInstallation Dillinger requires Node.js v10+ to run.\nInstall the dependencies and devDependencies and start the server.\ncd dillinger npm i node app For production environments\u0026hellip;\nnpm install --production NODE_ENV=production node app Plugins Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.\nPlugin README Dropbox plugins/dropbox/README.md GitHub plugins/github/README.md Google Drive plugins/googledrive/README.md OneDrive plugins/onedrive/README.md Medium plugins/medium/README.md Google Analytics plugins/googleanalytics/README.md Development Want to contribute? Great!\nDillinger uses Gulp + Webpack for fast developing. Make a change in your file and instantaneously see your updates!\nOpen your favorite Terminal and run these commands.\nFirst Tab:\nnode app Second Tab:\ngulp watch (optional) Third:\nkarma test Building for source For production release:\ngulp build --prod Generating pre-built zip archives for distribution:\ngulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.\nBy default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.\ncd dillinger docker build -t \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger.\nOnce done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger \u0026lt;youruser\u0026gt;/dillinger:${package.json.version} Note: --capt-add=SYS-ADMIN is required for PDF rendering.\nVerify the deployment by navigating to your server address in your preferred browser.\n127.0.0.1:8000 License MIT\nFree Software, Hell Yeah!\n","permalink":"http://localhost:1313/docs/contoh/","summary":"\u003ch1 id=\"dillinger\"\u003eDillinger\u003c/h1\u003e\n\u003ch2 id=\"the-last-markdown-editor-ever\"\u003e\u003cem\u003eThe Last Markdown Editor, Ever\u003c/em\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://nodesource.com/products/nsolid\"\u003e\u003cimg loading=\"lazy\" src=\"https://cldup.com/dTxpPi9lDf.thumb.png\" alt=\"N|Solid\"  /\u003e\r\n\u003c/a\u003e\n\u003cimg loading=\"lazy\" src=\"https://www.greenheirloom.in/cdn/shop/products/Bharani2_1024x1024@2x.jpg?v=1608273224\" alt=\"\"  /\u003e\r\n]\n\u003ca href=\"https://travis-ci.org/joemccann/dillinger\"\u003e\u003cimg loading=\"lazy\" src=\"https://travis-ci.org/joemccann/dillinger.svg?branch=master\" alt=\"Build Status\"  /\u003e\r\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eType some Markdown on the left\u003c/li\u003e\n\u003cli\u003eSee HTML in the right\u003c/li\u003e\n\u003cli\u003e✨Magic ✨\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImport a HTML file and watch it magically convert to Markdown\u003c/li\u003e\n\u003cli\u003eDrag and drop images (requires your Dropbox account be linked)\u003c/li\u003e\n\u003cli\u003eImport and save files from GitHub, Dropbox, Google Drive and Oneis a snippet of code where we retrieve the size of different fi Drive\u003c/li\u003e\n\u003cli\u003eDrag and drop markdown and HTML files into Dillinger\u003c/li\u003e\n\u003cli\u003eExport documents as Markdown, HTML and PDF\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs \u003ca href=\"http://daringfireball.net\"\u003eJohn Gruber\u003c/a\u003e writes on the \u003ca href=\"http://daringfireball.net/projects/markdown/\"\u003eMarkdown site\u003c/a\u003e\u003c/p\u003e","title":"Contoh"}]