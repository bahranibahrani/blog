[{"content":"Pendahuluan Self-hosting menjadi semakin populer bagi para penggemar teknologi yang ingin memiliki kontrol penuh atas data dan aplikasi mereka. Dengan self-hosting, Anda bisa menjalankan berbagai layanan, mulai dari situs web pribadi, cloud storage, hingga media server, langsung dari perangkat keras di rumah Anda. Namun, salah satu tantangan umum adalah mengekspos server rumah Anda ke internet dengan aman dan tanpa IP statis.\nDi sinilah Cloudflare Tunnel datang untuk menyelamatkan. Cloudflare Tunnel (sebelumnya dikenal sebagai Argo Tunnel) memungkinkan Anda menghubungkan server Anda ke jaringan Cloudflare tanpa harus membuka port pada router atau memiliki alamat IP publik yang statis. Ini menciptakan koneksi yang aman dan terenkripsi antara server Anda dan Cloudflare, melindungi Anda dari serangan langsung.\nDalam tutorial ini, kita akan membahas langkah-langkah untuk mengkonfigurasi server rumah (home server) dan menghubungkannya ke domain Anda menggunakan Cloudflare Tunnel.\nPrasyarat Sebelum memulai, pastikan Anda memiliki:\nPerangkat Server: Komputer atau perangkat apa pun yang akan Anda jadikan server (misalnya, Raspberry Pi, PC lama, atau VM). Domain Terdaftar: Anda harus memiliki nama domain yang sudah terdaftar (misalnya, namadomainanda.com). Akun Cloudflare: Akun gratis di Cloudflare. Langkah 1: Tambahkan Domain Anda ke Cloudflare Jika Anda belum melakukannya, langkah pertama adalah menambahkan domain Anda ke akun Cloudflare Anda.\nLogin ke dashboard Cloudflare. Klik \u0026ldquo;Add a site\u0026rdquo; dan masukkan nama domain Anda. Pilih paket Free. Cloudflare akan memindai catatan DNS Anda yang ada. Setelah selesai, klik Continue. Anda akan diberikan dua nameserver Cloudflare. Perbarui nameserver di registrar domain Anda (tempat Anda membeli domain) dengan yang diberikan oleh Cloudflare. Perubahan nameserver bisa memakan waktu hingga 24 jam untuk diterapkan sepenuhnya.\nLangkah 2: Instal cloudflared cloudflared adalah perangkat lunak command-line yang akan menjalankan Tunnel di server Anda. Instal cloudflared pada perangkat yang akan menjadi server Anda.\nAnda dapat mengunduhnya dari halaman unduhan resmi Cloudflare.\nUntuk Linux (Debian/Ubuntu):\ncurl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb sudo dpkg -i cloudflared.deb Untuk Windows:\nUnduh file .msi dan jalankan installer.\nUntuk macOS:\nbrew install cloudflare/cloudflare/cloudflared Langkah 3: Autentikasi cloudflared Selanjutnya, Anda perlu menghubungkan cloudflared dengan akun Cloudflare Anda.\nBuka terminal atau command prompt di server Anda.\nJalankan perintah berikut:\ncloudflared tunnel login Sebuah jendela browser akan terbuka. Login dengan akun Cloudflare Anda dan pilih domain yang ingin Anda gunakan.\nSetelah otorisasi berhasil, sebuah file sertifikat (cert.pem) akan diunduh ke direktori default cloudflared (misalnya, ~/.cloudflared/ di Linux).\nLangkah 4: Buat dan Konfigurasi Tunnel Sekarang kita akan membuat Tunnel dan mengkonfigurasinya untuk mengarahkan lalu lintas ke layanan lokal di server Anda.\nBuat Tunnel:\nJalankan perintah ini untuk membuat Tunnel. Ganti my-tunnel dengan nama yang Anda inginkan.\ncloudflared tunnel create my-tunnel Perintah ini akan menghasilkan file kredensial JSON (misalnya, \u0026lt;UUID\u0026gt;.json) di direktori ~/.cloudflared/. Simpan UUID Tunnel yang ditampilkan, karena Anda akan membutuhkannya.\nBuat File Konfigurasi:\nBuat file config.yml di dalam direktori ~/.cloudflared/. File ini akan menentukan bagaimana lalu lintas diarahkan.\ntunnel: \u0026lt;UUID_TUNNEL_ANDA\u0026gt; credentials-file: /root/.cloudflared/\u0026lt;UUID_TUNNEL_ANDA\u0026gt;.json ingress: - hostname: myapp.namadomainanda.com service: http://localhost:8080 # Tambahkan aturan lain di sini - service: http_status:404 Ganti \u0026lt;UUID_TUNNEL_ANDA\u0026gt; dengan UUID yang Anda dapatkan sebelumnya. hostname: Subdomain yang akan Anda gunakan. service: Alamat lokal layanan Anda. Contoh di atas mengarahkan lalu lintas ke server web yang berjalan di localhost pada port 8080. Baris terakhir (service: http_status:404) adalah aturan catch-all untuk mencegah permintaan ke hostname yang tidak terdefinisi terekspos. Hubungkan DNS ke Tunnel:\nJalankan perintah berikut untuk membuat catatan DNS CNAME di Cloudflare yang mengarah ke Tunnel Anda.\ncloudflared tunnel route dns my-tunnel myapp.namadomainanda.com Langkah 5: Jalankan Tunnel Anda dapat menjalankan Tunnel secara manual untuk pengujian:\ncloudflared tunnel run my-tunnel Namun, cara terbaik adalah menjalankannya sebagai layanan (service) agar tetap berjalan bahkan setelah server di-reboot.\nInstal Tunnel sebagai Layanan:\nsudo cloudflared service install Mulai Layanan:\nLayanan akan dimulai secara otomatis. Anda bisa memeriksanya dengan:\nsudo systemctl start cloudflared sudo systemctl status cloudflared Sekarang, jika Anda membuka myapp.namadomainanda.com di browser, permintaan akan diarahkan dengan aman melalui Cloudflare ke layanan yang berjalan di localhost:8080 di server rumah Anda!\nKesimpulan Dengan Cloudflare Tunnel, mengkonfigurasi home server menjadi jauh lebih mudah dan aman. Anda tidak perlu lagi khawatir tentang IP dinamis, konfigurasi port forwarding yang rumit, atau mengekspos server Anda secara langsung ke internet. Selamat mencoba dunia self-hosting!\n","permalink":"https://blog.bahrani.my.id/docs/catatan/self-hosting-cloudflare/","summary":"Pendahuluan Self-hosting menjadi semakin populer bagi para penggemar teknologi yang ingin memiliki kontrol penuh atas data dan aplikasi mereka. Dengan self-hosting, Anda bisa menjalankan berbagai layanan, mulai dari situs web pribadi, cloud storage, hingga media server, langsung dari perangkat keras di rumah Anda. Namun, salah satu tantangan umum adalah mengekspos server rumah Anda ke internet dengan aman dan tanpa IP statis.\nDi sinilah Cloudflare Tunnel datang untuk menyelamatkan. Cloudflare Tunnel (sebelumnya dikenal sebagai Argo Tunnel) memungkinkan Anda menghubungkan server Anda ke jaringan Cloudflare tanpa harus membuka port pada router atau memiliki alamat IP publik yang statis.","title":"Self-Hosting Made Easy: Konfigurasi Home Server Menggunakan Domain Cloudflare"}]